<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-24T10:30:56 IST" name="DeomSuite" finished-at="2024-06-24T10:32:59 IST" duration-ms="122194">
    <groups>
    </groups>
    <test started-at="2024-06-24T10:30:56 IST" name="Login Test" finished-at="2024-06-24T10:31:13 IST" duration-ms="17167">
      <class name="tests.LoginPageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.LoginPageTest@7ce69770]" started-at="2024-06-24T10:30:56 IST" name="setup" finished-at="2024-06-24T10:31:09 IST" duration-ms="12627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTestValidIDPass()[pri:0, instance:tests.LoginPageTest@7ce69770]" started-at="2024-06-24T10:31:09 IST" name="loginTestValidIDPass" finished-at="2024-06-24T10:31:12 IST" duration-ms="2764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginPageTest@7ce69770]" started-at="2024-06-24T10:31:12 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:31:12 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestValidIDPass status=SUCCESS method=LoginPageTest.loginTestValidIDPass()[pri:0, instance:tests.LoginPageTest@7ce69770] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginPageTest@7ce69770]" started-at="2024-06-24T10:31:12 IST" name="tearDown" finished-at="2024-06-24T10:31:13 IST" duration-ms="1626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginPageTest -->
    </test> <!-- Login Test -->
    <test started-at="2024-06-24T10:31:14 IST" name="LoginTestDDT" finished-at="2024-06-24T10:31:33 IST" duration-ms="19964">
      <class name="tests.LoginDDT">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:14 IST" name="setup" finished-at="2024-06-24T10:31:21 IST" duration-ms="7963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:22 IST" name="loginTestValidIDPass" data-provider="LoginData" finished-at="2024-06-24T10:31:26 IST" duration-ms="4829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dashboard]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid ID and Pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:26 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:31:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestValidIDPass status=SUCCESS method=LoginDDT.loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method signature="loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:26 IST" name="loginTestValidIDPass" data-provider="LoginData" finished-at="2024-06-24T10:31:28 IST" duration-ms="1699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid ID Invalid Pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:28 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:31:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestValidIDPass status=SUCCESS method=LoginDDT.loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method signature="loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:28 IST" name="loginTestValidIDPass" data-provider="LoginData" finished-at="2024-06-24T10:31:30 IST" duration-ms="1842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AAAA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid ID Valid Pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:30 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:31:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestValidIDPass status=SUCCESS method=LoginDDT.loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method signature="loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:30 IST" name="loginTestValidIDPass" data-provider="LoginData" finished-at="2024-06-24T10:31:32 IST" duration-ms="1812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admina]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admina]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid ID and Pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:32 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:31:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestValidIDPass status=SUCCESS method=LoginDDT.loginTestValidIDPass(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginDDT@239a307b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginDDT@239a307b]" started-at="2024-06-24T10:31:32 IST" name="tearDown" finished-at="2024-06-24T10:31:33 IST" duration-ms="1766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginDDT -->
    </test> <!-- LoginTestDDT -->
    <test started-at="2024-06-24T10:31:34 IST" name="Login Test Invalid ID" finished-at="2024-06-24T10:31:59 IST" duration-ms="25115">
      <class name="tests.LoginTestInvalidID">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.LoginTestInvalidID@5f8e8a9d]" started-at="2024-06-24T10:31:34 IST" name="setup" finished-at="2024-06-24T10:31:48 IST" duration-ms="14139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTestInValidIDPass()[pri:0, instance:tests.LoginTestInvalidID@5f8e8a9d]" started-at="2024-06-24T10:31:48 IST" name="loginTestInValidIDPass" finished-at="2024-06-24T10:31:50 IST" duration-ms="2630" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.LoginTestInvalidID.loginTestInValidIDPass(LoginTestInvalidID.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestInValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTestInvalidID@5f8e8a9d]" started-at="2024-06-24T10:31:50 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:31:55 IST" duration-ms="4906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestInValidIDPass status=FAILURE method=LoginTestInvalidID.loginTestInValidIDPass()[pri:0, instance:tests.LoginTestInvalidID@5f8e8a9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTestInvalidID@5f8e8a9d]" started-at="2024-06-24T10:31:55 IST" name="tearDown" finished-at="2024-06-24T10:31:59 IST" duration-ms="3426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTestInvalidID -->
    </test> <!-- Login Test Invalid ID -->
    <test started-at="2024-06-24T10:31:59 IST" name="Login Administrator" finished-at="2024-06-24T10:32:16 IST" duration-ms="17799">
      <class name="tests.AdministratorLoginTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.AdministratorLoginTest@6e535154]" started-at="2024-06-24T10:31:59 IST" name="setup" finished-at="2024-06-24T10:32:06 IST" duration-ms="7558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTestValidIDPass()[pri:0, instance:tests.AdministratorLoginTest@6e535154]" started-at="2024-06-24T10:32:06 IST" name="loginTestValidIDPass" finished-at="2024-06-24T10:32:14 IST" duration-ms="7900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestValidIDPass -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.AdministratorLoginTest@6e535154]" started-at="2024-06-24T10:32:14 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:32:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestValidIDPass status=SUCCESS method=AdministratorLoginTest.loginTestValidIDPass()[pri:0, instance:tests.AdministratorLoginTest@6e535154] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AdministratorLoginTest@6e535154]" started-at="2024-06-24T10:32:14 IST" name="tearDown" finished-at="2024-06-24T10:32:16 IST" duration-ms="2336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AdministratorLoginTest -->
    </test> <!-- Login Administrator -->
    <test started-at="2024-06-24T10:32:16 IST" name="Admin System User Search" finished-at="2024-06-24T10:32:32 IST" duration-ms="15743">
      <class name="tests.AdminSystemUserSearch">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.AdminSystemUserSearch@55cb6996]" started-at="2024-06-24T10:32:16 IST" name="setup" finished-at="2024-06-24T10:32:24 IST" duration-ms="7704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="test()[pri:0, instance:tests.AdminSystemUserSearch@55cb6996]" started-at="2024-06-24T10:32:24 IST" name="test" finished-at="2024-06-24T10:32:30 IST" duration-ms="6141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.AdminSystemUserSearch@55cb6996]" started-at="2024-06-24T10:32:30 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:32:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=AdminSystemUserSearch.test()[pri:0, instance:tests.AdminSystemUserSearch@55cb6996] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AdminSystemUserSearch@55cb6996]" started-at="2024-06-24T10:32:30 IST" name="tearDown" finished-at="2024-06-24T10:32:32 IST" duration-ms="1893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AdminSystemUserSearch -->
    </test> <!-- Admin System User Search -->
    <test started-at="2024-06-24T10:32:32 IST" name="Add Employee " finished-at="2024-06-24T10:32:59 IST" duration-ms="26321">
      <class name="tests.AddEmploy">
        <test-method is-config="true" signature="setupSuite(java.lang.String)[pri:0, instance:tests.AddEmploy@72c8e7b]" started-at="2024-06-24T10:30:55 IST" name="setupSuite" finished-at="2024-06-24T10:30:56 IST" duration-ms="833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.AddEmploy@72c8e7b]" started-at="2024-06-24T10:32:32 IST" name="setup" finished-at="2024-06-24T10:32:41 IST" duration-ms="9005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="AddEmployeeTest()[pri:0, instance:tests.AddEmploy@72c8e7b]" started-at="2024-06-24T10:32:41 IST" name="AddEmployeeTest" finished-at="2024-06-24T10:32:53 IST" duration-ms="12238" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.AddEmploy.AddEmployeeTest(AddEmploy.java:44)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddEmployeeTest -->
        <test-method is-config="true" signature="captureScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.AddEmploy@72c8e7b]" started-at="2024-06-24T10:32:53 IST" name="captureScreenshotOnFailure" finished-at="2024-06-24T10:32:57 IST" duration-ms="3165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddEmployeeTest status=FAILURE method=AddEmploy.AddEmployeeTest()[pri:0, instance:tests.AddEmploy@72c8e7b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AddEmploy@72c8e7b]" started-at="2024-06-24T10:32:57 IST" name="tearDown" finished-at="2024-06-24T10:32:59 IST" duration-ms="1908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:tests.AddEmploy@72c8e7b]" started-at="2024-06-24T10:32:59 IST" name="tearDownSuite" finished-at="2024-06-24T10:32:59 IST" duration-ms="942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- tests.AddEmploy -->
    </test> <!-- Add Employee  -->
  </suite> <!-- DeomSuite -->
</testng-results>
